/*
External API



# Developer Resources
 Refer
[Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 

The version of the OpenAPI document: 1.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { Link } from './link';

/**
 * The earnings to apply to the check. Each earning needs to define as one of the following allowed values
 * @export
 * @interface PayComponentResource
 */
export interface PayComponentResource {
    /**
     * The description of the Pay Component.
     * @type {string}
     * @memberof PayComponentResource
     */
    'description'?: string;
    /**
     * The unique identifier used to identify a pay component.
     * @type {string}
     * @memberof PayComponentResource
     */
    'componentId'?: string;
    /**
     * The unique identifier associated for the pay component on this check.
     * @type {string}
     * @memberof PayComponentResource
     */
    'checkComponentId'?: string;
    /**
     * The Paychex standard code number for the Pay Component, can be two digit.
     * @type {string}
     * @memberof PayComponentResource
     */
    'code'?: string;
    /**
     * Name given to the pay component.
     * @type {string}
     * @memberof PayComponentResource
     */
    'name'?: string;
    /**
     * The category that this component falls into.
     * @type {string}
     * @memberof PayComponentResource
     */
    'classificationType'?: string;
    /**
     * The effect that the pay component will have on the check amount.
     * @type {string}
     * @memberof PayComponentResource
     */
    'effectOnPay'?: PayComponentResourceEffectOnPayEnum;
    /**
     * The date that the pay component is able to be applied on a check.
     * @type {string}
     * @memberof PayComponentResource
     */
    'startDate'?: string;
    /**
     * The date that the pay component is not available to be applied on a check moving forward.
     * @type {string}
     * @memberof PayComponentResource
     */
    'endDate'?: string;
    /**
     * List of workerTypes that the component can be applied to.
     * @type {Array<string>}
     * @memberof PayComponentResource
     */
    'appliesToWorkerTypes'?: Array<PayComponentResourceAppliesToWorkerTypesEnum>;
    /**
     * This is used optionally for overriding a job when it needs to be different than the workers default. This option is only available when the client has job costing.
     * @type {string}
     * @memberof PayComponentResource
     */
    'jobId'?: string;
    /**
     * This is used optionally for overriding a labor assignment when it needs to be different than the workers assignment distribution. This option is only available when the client has labor assignment.
     * @type {string}
     * @memberof PayComponentResource
     */
    'laborAssignmentId'?: string;
    /**
     * Unique identifier for this workers pay rate **This ID will change if this is created for an IN_PROGRESS worker that is later completed within Flex**
     * @type {string}
     * @memberof PayComponentResource
     */
    'payRateId'?: string;
    /**
     * The rate amount that will be applied for this component. Used in conjunction with Hours or Units.
     * @type {string}
     * @memberof PayComponentResource
     */
    'payRate'?: string;
    /**
     * The number of hours that will be applied for this component. Used in conjunction with rate.
     * @type {string}
     * @memberof PayComponentResource
     */
    'payHours'?: string;
    /**
     * The number of units that will be applied for this component. Used in conjunction with rate.
     * @type {string}
     * @memberof PayComponentResource
     */
    'payUnits'?: string;
    /**
     * The flat amount to be applied for this component. Not used with Rate, Hours, or Units.
     * @type {string}
     * @memberof PayComponentResource
     */
    'payAmount'?: string;
    /**
     * This is used optionally for specifying a date that the pay component was generated on.
     * @type {string}
     * @memberof PayComponentResource
     */
    'lineDate'?: string;
    /**
     * This is used optionally for memoing the payHours or payUnits so that they are informational when using a payAmount.
     * @type {boolean}
     * @memberof PayComponentResource
     */
    'memoed'?: boolean;
    /**
     * 
     * @type {Array<Link>}
     * @memberof PayComponentResource
     */
    'links'?: Array<Link>;
}

type PayComponentResourceEffectOnPayEnum = 'ADDITION' | 'ADDITION_WITH_IN_OUT' | 'EMPLOYER_INFORMATIONAL' | 'REDUCTION'
type PayComponentResourceAppliesToWorkerTypesEnum = 'EMPLOYEE' | 'CONTRACTOR' | 'INDEPENDENT_CONTRACTOR'


